# Generated by Django 4.2.2 on 2023-08-03 18:40

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='images/persons/', verbose_name='Фото')),
                ('favorite', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='В избранном')),
            ],
            options={
                'verbose_name': 'Актёр',
                'verbose_name_plural': 'Актёры',
                'db_table': 'actors',
                'ordering': ('name', 'last_name'),
                'abstract': False,
                'default_related_name': 'fav_actors',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'db_table': 'categories',
                'ordering': ('title',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Compilation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Информация')),
                ('picture', models.ImageField(upload_to='images/compilations/', verbose_name='Фото')),
                ('from_redaction', models.BooleanField(default=False, verbose_name='От редакции')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compilations', to=settings.AUTH_USER_MODEL)),
                ('favorite', models.ManyToManyField(blank=True, related_name='favorite_compilations', to=settings.AUTH_USER_MODEL, verbose_name='Избранные подборки')),
            ],
            options={
                'verbose_name': 'Подборка',
                'verbose_name_plural': 'Подборки',
                'db_table': 'compilations',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
                'db_table': 'countries',
                'ordering': ('title',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='images/persons/', verbose_name='Фото')),
                ('favorite', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='В избранном')),
            ],
            options={
                'verbose_name': 'Режиссёр',
                'verbose_name_plural': 'Режиссёры',
                'db_table': 'directors',
                'ordering': ('name', 'last_name'),
                'abstract': False,
                'default_related_name': 'fav_directors',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='images/genres/', verbose_name='Картинка')),
                ('favorite', models.ManyToManyField(blank=True, related_name='fav_genres', to=settings.AUTH_USER_MODEL, verbose_name='В избранном')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
                'db_table': 'genres',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название')),
                ('original_title', models.CharField(blank=True, max_length=150, verbose_name='Оригинальное название')),
                ('description', models.TextField(blank=True, verbose_name='Информация')),
                ('v_picture', models.ImageField(upload_to='images/movies/', verbose_name='Фото вертикальное')),
                ('h_picture', models.ImageField(upload_to='images/movies/', verbose_name='Фото горизонтальное')),
                ('premiere_date', models.DateField(verbose_name='Дата премьеры')),
                ('rating_avg', models.FloatField(default=0, verbose_name='Средний рейтинг среди пользователей')),
                ('rate_imdb', models.FloatField(default=0, verbose_name='Рейтинг Imdb')),
                ('rate_kinopoisk', models.FloatField(default=0, verbose_name='Рейтинг кинопоиск')),
                ('duration_minutes', models.PositiveSmallIntegerField(verbose_name='Продолжительность')),
                ('age_limit', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(30)], verbose_name='Возрастное ограничение')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='Количество получения карточки')),
                ('trailer_link', models.TextField()),
                ('actors', models.ManyToManyField(related_name='movies', to='movies.actor', verbose_name='Актеры')),
                ('categories', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='movies', to='movies.category', verbose_name='Категории')),
                ('countries', models.ManyToManyField(related_name='movies', to='movies.country', verbose_name='Страны')),
                ('directors', models.ManyToManyField(related_name='movies', to='movies.director', verbose_name='Режиссёры')),
                ('favorite_for', models.ManyToManyField(related_name='favorite_movies', to=settings.AUTH_USER_MODEL, verbose_name='Избранное у пользователей')),
                ('genres', models.ManyToManyField(related_name='movies', to='movies.genre', verbose_name='Жанры')),
                ('need_to_see', models.ManyToManyField(related_name='need_see_movies', to=settings.AUTH_USER_MODEL, verbose_name='В списке просмотра у пользователей')),
            ],
            options={
                'verbose_name': 'Фильм',
                'verbose_name_plural': 'Фильмы',
                'db_table': 'movies',
                'ordering': ('rate_imdb', 'title'),
            },
        ),
        migrations.CreateModel(
            name='RatingMovie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Оценка')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='movies.movie', verbose_name='Фильм')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Оценка фильма',
                'verbose_name_plural': 'Оценки фильмов',
                'db_table': 'movies_ratings',
                'abstract': False,
                'default_related_name': 'movies_ratings',
            },
        ),
        migrations.CreateModel(
            name='RatingCompilation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Оценка')),
                ('compilation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='movies.compilation', verbose_name='Подборка')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Оценка подборки',
                'verbose_name_plural': 'Оценки подборок',
                'db_table': 'compilations_ratings',
                'abstract': False,
                'default_related_name': 'compilations_ratings',
            },
        ),
        migrations.AddField(
            model_name='compilation',
            name='movies',
            field=models.ManyToManyField(related_name='compilations', to='movies.movie', verbose_name='Фильмы'),
        ),
    ]
